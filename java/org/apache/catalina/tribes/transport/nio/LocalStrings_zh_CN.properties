# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

nioReceiver.alreadyStarted=ServerSocketChannel\u5df2\u7ecf\u88ab\u542f\u52a8
nioReceiver.cleanup.fail=\u65e0\u6cd5\u6e05\u9664\u5173\u95ed\u7684\u9009\u62e9\u5668
nioReceiver.clientDisconnect=\u590d\u5236\u5ba2\u6237\u7aef\u5df2\u65ad\u5f00\u8fde\u63a5\uff0c\u8f6e\u8be2\u5bc6\u94a5\u65f6\u51fa\u9519\u3002\u5ffd\u7565\u5ba2\u6237\u7aef\u3002
nioReceiver.requestError=NioReceiver\u65e0\u6cd5\u5904\u7406\u8bf7\u6c42
nioReceiver.run.fail=\u4e0d\u80fd\u5141\u8bb8\u590d\u5236\u76d1\u542c\u5668
nioReceiver.start.fail=\u65e0\u6cd5\u542f\u52a8\u96c6\u7fa4\u63a5\u6536\u5668
nioReceiver.stop.fail=\u65e0\u6cd5\u5173\u95ed\u96c6\u7fa4\u63a5\u6536\u7684\u9009\u62e9\u5668
nioReceiver.stop.threadRunning=NioReceiver\u7ebf\u7a0b\u6ca1\u6709\u53ca\u65f6\u505c\u6b62\u3002\u5173\u95ed\u9009\u62e9\u5668\u65f6\u53ef\u80fd\u4f1a\u89c2\u5bdf\u5230\u9519\u8bef\u3002
nioReceiver.threadpool.fail=ThreadPool \u65e0\u6cd5\u521d\u59cb\u5316\u3002 \u76d1\u542c\u5668\u672a\u542f\u52a8\u3002

nioReplicationTask.error.register.key=\u9519\u8bef\u7684\u6ce8\u518ckey\u88ab\u8bfb\u53d6:[{0}]
nioReplicationTask.process.clusterMsg.failed=\u5904\u7406\u96c6\u7fa4\u6d88\u606f\u5931\u8d25
nioReplicationTask.unable.ack=\u4e0d\u80fd\u901a\u8fc7channel\u53d1\u9001ack\uff0cchannel\u5df2\u7ecf\u65ad\u5f00?[{0}]

nioSender.datagram.already.established=\u6570\u636e\u62a5\u901a\u9053\u5df2\u7ecf\u5efa\u7acb\u3002\u8fde\u63a5\u53ef\u80fd\u6b63\u5728\u8fdb\u884c\u4e2d\u3002
nioSender.not.connected=NioSender\u672a\u8fde\u63a5\uff0c\u8fd9\u662f\u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u3002
nioSender.sender.disconnected=\u53d1\u4ef6\u4eba\u5df2\u65ad\u5f00\u8fde\u63a5\uff0c\u65e0\u6cd5\u5904\u7406\u9009\u62e9\u5bc6\u94a5\u3002
nioSender.unable.receive.ack=\u65e0\u6cd5\u63a5\u6536\u786e\u8ba4\u6d88\u606f\u3002\u5df2\u5230\u8fbe\u5957\u63a5\u5b57\u901a\u9053\u4e0a\u7684EOF\u3002
nioSender.unknown.state=\u6570\u636e\u5904\u4e8e\u672a\u77e5\u72b6\u6001\u3002readyOps = [{0}]

parallelNioSender.send.fail.retrying=\u6210\u5458\u53d1\u9001\u5931\u8d25\uff1a[{0}]; \u8bbe\u7f6e\u4e3a\u6000\u7591\u5e76\u91cd\u8bd5\u3002
parallelNioSender.send.failed=\u5e76\u884c\u7684NIO.\u53d1\u9001\u5931\u8d25\u3002
parallelNioSender.sendFailed.attempt=\u53d1\u9001\u5931\u8d25\uff0c\u5c1d\u8bd5: [{0}] \u6700\u5927: [{1}]
parallelNioSender.sender.disconnected.sendFailed=\u53d1\u9001\u5931\u8d25\u4e14sender\u5df2\u65ad\u5f00\u8fde\u63a5\uff0c\u4e0d\u518d\u91cd\u8bd5\u3002

pooledParallelSender.sender.disconnected=sender \u672a\u8fde\u63a5\u3002
pooledParallelSender.unable.open=\u65e0\u6cd5\u6253\u5f00nio\u9009\u62e9\u5668\u3002
pooledParallelSender.unable.retrieveSender=\u65e0\u6cd5\u4ecesender\u6c60\u4e2d\u83b7\u53d6\u4e00\u4e2asender
